git version				(la version de git)
pwd					(position actuelle)
mkdir					("make directory", créé un dossier)
ls					(liste de ce qui ce trouve la on nous somme positionné)
cd ..					(1 branche en arrière)
cd "..."				(ce positionne au chemin d'accès indiqué)
git config --global user.name "..."	(renseigne le nom)
git config --global user.email "..."	(renseigne l'adresse email)
git config --global --list		(liste les éléments renseigné du paramètre global)
git  ou  git --help			(aide)
git init				(initialiser un dossier dans le dépot courant)
git status				(donne l'état actuel de l'environnement de travail)
git add . ( ou juste ce que l'on veut)	(indexer les fichiers)
git reset (juste ce que l'on veut)	(Désindexer des fichiers)
git commit -m"..."			(enregistrer dans le dépot)(message)
git diff (+nom du fichier ciblé)	(visualiser les modif apporté au fichier)
git diff --cached			(visualiser les modif apporté au fichier dans la zone d'indexage)
git log					(affiche la liste de nos commit)(historique)(seulement ce qui ce trouve avant le tag HEAD)
git log -n (nombre)			(affiche les derniers commit selon le nombre choisis)
git show (cha1)				(affiche le contenu du commit en question)
git checkout (cha1) / git switch	(ce déplacer sur le commit en question)
git checkout master			(ce déplacer sur la branche master(le dernier))
git tag (nom du tag)			(créé un tag)(remplace le cha1 par le tag)
git tag (nom du tag) -m"(message)"	(créé un tag)(remplace le cha1)(ajoute un message)
git tag --delete (nom du tag)		(supprime le tag et remet le cha1)
git tag					(liste l'ensemble des tag)
git clone (lien HTTPS) (nom du dossier)	(clone en local le projet voulu dans un dossier)
git remote -v				(affiche la liste des remotes)
git remote show (nom du remote)		(infos complémentaires sur le remote en question)
git remote add (nom) (lien du dépot)	(ajouter le remote a notre dépot)(pointe sur le dépot distant hébergé sur github)
git push -u (remote) (branche)		(pousse les modif et l'historique vers le dépot github)
git push --tags				(pousse les tags vest le dépot github)
git fetch				(récuperer les infos venant du serveur distant github)
git pull				(applique les modifications au dépot local)
echo "(texte)" >> README.md		(écrit le texte dans le fichier README.md)
cat README.md				(montre ce qui est écrit dans le fichier README.md)
git blame (nom du fichier)		(plus d'infos sur les modif d'un fichier)
git blame -L (ligne),(ligne) (fichier)	(infos sur les modif entres les lignes choisis)(inclus)
touch .gitignore			(créé le fichier caché ".gitignore")
(nom du dossier)/(nom du fichier)	(!!!!!! DANS LE .gitignore !!!!!!!)(permet d'ignorer les fichiers voulu)
git stash save "(message)"		(range les modifications dans la zone de stash)
git stash list				(consulte les stash)
git stash pop (index)			(réajoute les modifications)
git merge --abort			(annuler le merge en cours)
git pull --rebase			(effectue un rebase)
git branch (nom)			(créé une branche avec un nom)
git branch				(liste des branch)
git branch -a				(voir l'ensemble des branch , memes celles qui sont sur le serveur distant)
git cherry-pick (cha1)			(appliquer le commit choisi)
git branch -d (nom de la branch)	(EN LOCAL supprime la branch en question)(ne pas être positionné sur la branch à supprimer)
git push (remote) --delete (branche)	(supprime la branch en question)(ne pas être positionné sur la branch à supprimer)
